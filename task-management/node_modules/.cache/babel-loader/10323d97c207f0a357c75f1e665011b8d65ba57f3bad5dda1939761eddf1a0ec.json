{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hokha\\\\Dropbox\\\\PC\\\\Downloads\\\\LearningDocuments\\\\DACN-A\\\\DACNA\\\\task-management\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Tạo context cho authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Kiểm tra người dùng đã đăng nhập khi tải trang\n  useEffect(() => {\n    // Kiểm tra localStorage xem có user đã lưu không\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error(\"Error parsing stored user:\", error);\n        localStorage.removeItem(\"user\");\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Hàm đăng nhập\n  const login = async credentials => {\n    try {\n      // Nếu có mockResult (từ dữ liệu mẫu), sử dụng nó\n      if (credentials.mockResult && credentials.mockResult.success) {\n        const userData = credentials.mockResult.user;\n\n        // Lưu thông tin user vào state và localStorage\n        setUser(userData);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        return {\n          success: true,\n          user: userData\n        };\n      }\n\n      // Logic đăng nhập thật ở đây (gọi API)\n      console.log(\"Đang thực hiện đăng nhập với:\", credentials.email);\n\n      // Trả về lỗi mặc định nếu không có mockResult\n      return {\n        success: false,\n        error: \"Vui lòng sử dụng dữ liệu mẫu từ danh sách bên dưới\"\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Lỗi đăng nhập\"\n      };\n    }\n  };\n\n  // Hàm đăng xuất\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n\n  // Hàm kiểm tra trạng thái đăng nhập\n  const isAuthenticated = () => {\n    return !!user;\n  };\n\n  // Context value chứa trạng thái và các hàm xử lý\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","credentials","mockResult","success","userData","setItem","stringify","log","email","message","logout","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hokha/Dropbox/PC/Downloads/LearningDocuments/DACN-A/DACNA/task-management/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Tạo context cho authentication\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Kiểm tra người dùng đã đăng nhập khi tải trang\r\n  useEffect(() => {\r\n    // Kiểm tra localStorage xem có user đã lưu không\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error(\"Error parsing stored user:\", error);\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Hàm đăng nhập\r\n  const login = async (credentials) => {\r\n    try {\r\n      // Nếu có mockResult (từ dữ liệu mẫu), sử dụng nó\r\n      if (credentials.mockResult && credentials.mockResult.success) {\r\n        const userData = credentials.mockResult.user;\r\n        \r\n        // Lưu thông tin user vào state và localStorage\r\n        setUser(userData);\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        \r\n        return { success: true, user: userData };\r\n      }\r\n      \r\n      // Logic đăng nhập thật ở đây (gọi API)\r\n      console.log(\"Đang thực hiện đăng nhập với:\", credentials.email);\r\n      \r\n      // Trả về lỗi mặc định nếu không có mockResult\r\n      return { \r\n        success: false, \r\n        error: \"Vui lòng sử dụng dữ liệu mẫu từ danh sách bên dưới\" \r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      return { success: false, error: error.message || \"Lỗi đăng nhập\" };\r\n    }\r\n  };\r\n\r\n  // Hàm đăng xuất\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  // Hàm kiểm tra trạng thái đăng nhập\r\n  const isAuthenticated = () => {\r\n    return !!user;\r\n  };\r\n\r\n  // Context value chứa trạng thái và các hàm xử lý\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACd,IAAI;QACFH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDJ,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IACAR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF;MACA,IAAIA,WAAW,CAACC,UAAU,IAAID,WAAW,CAACC,UAAU,CAACC,OAAO,EAAE;QAC5D,MAAMC,QAAQ,GAAGH,WAAW,CAACC,UAAU,CAACd,IAAI;;QAE5C;QACAC,OAAO,CAACe,QAAQ,CAAC;QACjBX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;QAEtD,OAAO;UAAED,OAAO,EAAE,IAAI;UAAEf,IAAI,EAAEgB;QAAS,CAAC;MAC1C;;MAEA;MACAN,OAAO,CAACS,GAAG,CAAC,+BAA+B,EAAEN,WAAW,CAACO,KAAK,CAAC;;MAE/D;MACA,OAAO;QACLL,OAAO,EAAE,KAAK;QACdN,KAAK,EAAE;MACT,CAAC;IAEH,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QAAEM,OAAO,EAAE,KAAK;QAAEN,KAAK,EAAEA,KAAK,CAACY,OAAO,IAAI;MAAgB,CAAC;IACpE;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;;EAED;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,OAAO,CAAC,CAACvB,IAAI;EACf,CAAC;;EAED;EACA,MAAMwB,KAAK,GAAG;IACZxB,IAAI;IACJE,OAAO;IACPU,KAAK;IACLU,MAAM;IACNC;EACF,CAAC;EAED,oBAAO5B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA1B,QAAA,EAAEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC9B,EAAA,CArEIF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAuElB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}